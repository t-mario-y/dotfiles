% Git(custom)

$ select_local_branch_name: git branch --format="%(refname:short)" --- --fzf-overrides --reverse
$ select_merge_conflict_process: echo 'rebase\nmerge\ncherry-pick\nrevert' --- --fzf-overrides --reverse

# pull upstream branch
git pull upstream <select_local_branch_name>

# rebase from upstream branch
git rebase upstream/<select_local_branch_name>

# interactive rebase from recent commit
git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium --oneline -n100 | \
  fzf-tmux -p -w90% --ansi --reverse | awk '{print $2}' | xargs git rebase --interactive

# show log graph by oneline
git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium --oneline -n100

# merge upstream branch
git merge --no-ff upstream/<select_local_branch_name>

# interactive rebase from upstream branch
git rebase -i upstream/<select_local_branch_name>

# switch local branch
git switch <select_local_branch_name>

# abort merge conflict process(rebase, merge, cherry-pick, revert)
git <select_merge_conflict_process> --abort

# continue merge conflict process(rebase, merge, cherry-pick, revert)
git <select_merge_conflict_process> --continue

# cd to repository managed by ghq
cd $(ghq list | fzf-tmux -p --reverse | xargs ghq list --full-path --exact)

# hard reset to HEAD
git add -N . && git reset --hard HEAD

# soft reset to HEAD
git reset --soft HEAD

# print current branch name
git symbolic-ref --short HEAD

# push --force-with-lease
git push --force-with-lease

# push --no-verify
git push --no-verify

# commit amend without confirmation
git commit --amend --no-edit

# print config
git config --list <local_or_global_or_all>
$ local_or_global_or_all: echo '--global\n--local\n' --- --fzf-overrides --reverse

# print diff files compared to upstream develop branch
cat <(git diff HEAD --name-only) <(git diff upstream/develop... --name-only) | sort | uniq

# fetch remote all
git fetch --all

# add remote repository(ex: <someones_github_account> <repo_URL>)
git remote add 

# remove remote repository()
git remote | fzf-tmux -p --reverse | git remote remove 

# push to remote repository
git remote | fzf-tmux -p --reverse | xargs -I{} git push --set-upstream {} $(git symbolic-ref --short HEAD)

% GitHub

# search Pull Request and view on browser
; TODO: カレントディレクトリ以外のPull Requestを探せるが、開くことができない
cat <(gh search prs --reviewed-by=@me --state=open) <(gh search prs --assignee=@me --state=open) <(gh search prs --author=@me --state=open) | \
  sort | uniq | fzf-tmux -p -w90% --reverse | \
  cut -f2 | xargs -I {} gh pr view -w {}

# view repository on browser
gh repo view -w
